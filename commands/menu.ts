import { eq } from "drizzle-orm";
import type { Context } from "grammy";
import { menuCommandKeyboard } from "../keyboards/menuCommandKeyboard";
import { db, likes, matches, users } from "../lib/drizzle";

export const getMenuMessage = async (ctx: Context) => {
  const userId = ctx.from?.id;
  if (!userId) return "–ü—Ä–∏–≤–µ—Ç, –Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü!";

  const [existUser] = await db
    .select()
    .from(users)
    .where(eq(users.id, userId.toString()));
  if (!existUser) return "–ü—Ä–∏–≤–µ—Ç, –Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü!";

  const countOfLikes = await db
    .select()
    .from(likes)
    .then((res) => res.length);

  const countOfMatches = await db
    .select()
    .from(matches)
    .then((res) => res.length);

  const countOfProfiles = await db
    .select()
    .from(users)
    .where(eq(users.isVisible, true))
    .then((res) => res.length);

  return `<b>–ü—Ä–∏–≤–µ—Ç, ${
    existUser.name || "–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü"
  }!</>\n–ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º? üòâ\n\n<blockquote>–ê–Ω–∫–µ—Ç –≤ –±–æ—Ç–µ: ${countOfProfiles}\n–í—Å–µ–≥–æ –º–µ—Ç—á–µ–π: ${countOfMatches}\n–í—Å–µ–≥–æ –ª–∞–π–∫–æ–≤: ${countOfLikes}</blockquote>\n\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é –Ω–∏–∂–µ:`;
};

export const menuCommand = async (ctx: Context) => {
  const message = await getMenuMessage(ctx);
  return ctx.reply(message, {
    reply_markup: menuCommandKeyboard,
    parse_mode: "HTML",
  });
};
