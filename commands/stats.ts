import type { MyContext } from "..";
import { config } from "../lib/env";
import { logger } from "../lib/logger";
import { statsService } from "../lib/statistics";

export const statsCommand = async (ctx: MyContext) => {
  if (ctx.from?.id.toString() !== config.ADMIN_CHAT_ID) return;

  try {
    await ctx.reply("üìä –°–æ–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...");

    const stats = await statsService.collectFullStats();

    const message = `
üìà *–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–û–¢–ê - –û–ë–©–ê–Ø*

üë• *–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:*
‚îú –í—Å–µ–≥–æ: ${stats.users.total}
‚îú –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${stats.users.active}
‚îú –ù–æ–≤—ã—Ö —Å–µ–≥–æ–¥–Ω—è: ${stats.users.newToday}
‚îú –ù–æ–≤—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: ${stats.users.newWeek}
‚îú –° —Ñ–æ—Ç–æ: ${stats.users.withPhotos}
‚îî –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ: ${stats.users.banned}

‚ù§Ô∏è *–í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø:*
‚îú –õ–∞–π–∫–æ–≤ –≤—Å–µ–≥–æ: ${stats.interactions.likesTotal}
‚îú –õ–∞–π–∫–æ–≤ —Å–µ–≥–æ–¥–Ω—è: ${stats.interactions.likesToday}
‚îú –õ–∞–π–∫–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: ${stats.interactions.likesWeek}
‚îú –ú–µ—Ç—á–µ–π –≤—Å–µ–≥–æ: ${stats.interactions.matchesTotal}
‚îú –ú–µ—Ç—á–µ–π —Å–µ–≥–æ–¥–Ω—è: ${stats.interactions.matchesToday}
‚îú –ú–µ—Ç—á–µ–π –∑–∞ –Ω–µ–¥–µ–ª—é: ${stats.interactions.matchesWeek}
‚îú –ñ–∞–ª–æ–± –≤—Å–µ–≥–æ: ${stats.interactions.reportsTotal}
‚îú –ñ–∞–ª–æ–± —Å–µ–≥–æ–¥–Ω—è: ${stats.interactions.reportsToday}
‚îî –ñ–∞–ª–æ–± –∑–∞ –Ω–µ–¥–µ–ª—é: ${stats.interactions.reportsWeek}

üìä *–≠–ù–ì–ï–ô–î–ñ–ú–ï–ù–¢:*
‚îú –õ–∞–π–∫–æ–≤ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${stats.engagement.likesPerUser}
‚îú –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –º–µ—Ç—á: ${(stats.engagement.matchesPerLike * 100).toFixed(1)}%
‚îî –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: ${stats.engagement.activeToday}

üë´ *–î–ï–ú–û–ì–†–ê–§–ò–Ø:*
‚îú –ü–∞—Ä–Ω–µ–π: ${stats.demographics.male} (${(
      (stats.demographics.male / stats.users.total) * 100
    ).toFixed(1)}%)
‚îú –î–µ–≤—É—à–µ–∫: ${stats.demographics.female} (${(
      (stats.demographics.female / stats.users.total) * 100
    ).toFixed(1)}%)
‚îî –°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç: ${stats.demographics.avgAge}

‚è± *–û–ë–ù–û–í–õ–ï–ù–û:* ${new Date().toLocaleString("ru-RU")}
    `.trim();

    await ctx.reply(message, {
      parse_mode: "Markdown",
      link_preview_options: { is_disabled: true },
    });
  } catch (error) {
    const errorMessage =
      error instanceof Error ? error.message : "Unknown error";
    logger.error({ err: errorMessage }, "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏");
    await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏");
  }
};
