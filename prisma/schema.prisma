generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  male
  female
  none
}

enum UserRole {
  banned
  default
  moder
}

enum LikeType {
  like
  dislike
}

model User {
  id          String   @id @default(cuid())
  name        String
  username    String?
  age         Int?
  gender      Gender   @default(none)
  description String?
  imageUrls   String[]
  isVisible   Boolean  @default(false)
  role        UserRole @default(default)
  createdAt   DateTime @default(now())

  likesSent     Like[] @relation("likesSent")
  likesReceived Like[] @relation("likesReceived")

  matchesA Match[] @relation("matchesA")
  matchesB Match[] @relation("matchesB")
}

model Like {
  id         String   @id @default(cuid())
  fromUser   User     @relation("likesSent", fields: [fromUserId], references: [id])
  fromUserId String
  toUser     User     @relation("likesReceived", fields: [toUserId], references: [id])
  toUserId   String
  type       LikeType @default(like)
  createdAt  DateTime @default(now())

  @@unique([fromUserId, toUserId])
}

model Match {
  id        String   @id @default(cuid())
  userA     User     @relation("matchesA", fields: [userAId], references: [id])
  userAId   String
  userB     User     @relation("matchesB", fields: [userBId], references: [id])
  userBId   String
  createdAt DateTime @default(now())

  @@unique([userAId, userBId])
}

model Report {
  id         String   @id @default(cuid())
  fromUserId String
  toUserId   String
  reason     String?
  createdAt  DateTime @default(now())
}
