import type { MyContext } from "..";
import { backKeyboard } from "../keyboards/backKeyboard";
import { rateProfileKeyboard } from "../keyboards/rateProfileKeyboard";
import db from "../lib/db";
import { getProfileMessage } from "../utils/getProfileMessage";
import { getRandomProfile } from "../utils/getRamdomProfile";
import { removeLastProfileButtons } from "../utils/removeLastProfileButtons";

export const rateProfiles = async (ctx: MyContext) => {
  const userId = ctx.from?.id.toString();
  if (!userId) return;

  await removeLastProfileButtons(ctx);

  const existUser = await db.user.findUnique({
    where: { id: userId },
  });
  if (!existUser) return;

  if (!existUser.imageUrls?.[0])
    return await ctx.reply(
      "–ü–æ—Ö–æ–∂–µ, —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –µ—â—ë –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ üòÖ\n\n" +
        "–ß—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –º–æ–≥–ª–∏ —Ç–µ–±—è –Ω–∞–π—Ç–∏ –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, –Ω—É–∂–Ω–æ –µ—ë —Å–æ–∑–¥–∞—Ç—å ‚ú®",
      {
        reply_markup: backKeyboard,
      },
    );

  if (!existUser.isVisible)
    return await ctx.reply(
      "üëÄ –ß—Ç–æ–±—ã —Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã –¥—Ä—É–≥–∏—Ö, –≤–∫–ª—é—á–∏ –≤–∏–¥–∏–º–æ—Å—Ç—å —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–∏–ª—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.",
      {
        reply_markup: backKeyboard,
      },
    );

  const profile = await getRandomProfile(
    userId,
    existUser.gender === "male" ? "female" : "male",
  );

  if (!profile)
    return await ctx.reply(
      "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å üòî\n\n–ó–∞–≥–ª—è–Ω–∏ –ø–æ–ø–æ–∑–∂–µ ‚Äî –∫—Ç–æ-–Ω–∏–±—É–¥—å —Ç–æ—á–Ω–æ –ø–æ—è–≤–∏—Ç—Å—è!",
      {
        reply_markup: backKeyboard,
      },
    );

  if (!profile.imageUrls[0]) return;

  const sentMessage = await ctx.replyWithPhoto(profile.imageUrls[0], {
    caption: getProfileMessage(profile),
    parse_mode: "HTML",
    reply_markup: rateProfileKeyboard,
  });

  await ctx.editMessageReplyMarkup({
    reply_markup: rateProfileKeyboard,
  });

  ctx.session.currentProfileId = profile.id;
  ctx.session.lastProfileMessageId = sentMessage.message_id;

  await ctx.answerCallbackQuery();
};
